[{"/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/index.js":"1","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/App.js":"2","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/reportWebVitals.js":"3","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/UI/Button/Button.js":"4","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Profile/Profile.js":"5","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Lists/Lists.js":"6","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/axios/config.js":"7","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Auth/Login/Login.js":"8","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Auth/Register/Register.js":"9","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Header/Header.js":"10","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/UI/Card/Card.js":"11","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/UI/Logo/Logo.js":"12","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Layout/Layout.js":"13","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Auth/Auth.js":"14","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Background/Background.js":"15","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Footer/Footer.js":"16","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/UI/Nav/AuthNav.js":"17"},{"size":589,"mtime":1609541282624,"results":"18","hashOfConfig":"19"},{"size":778,"mtime":1609636526188,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1608567184069,"results":"21","hashOfConfig":"19"},{"size":233,"mtime":1609215341946,"results":"22","hashOfConfig":"19"},{"size":332,"mtime":1609867772166,"results":"23","hashOfConfig":"19"},{"size":330,"mtime":1609541118678,"results":"24","hashOfConfig":"19"},{"size":122,"mtime":1609440543937,"results":"25","hashOfConfig":"19"},{"size":3879,"mtime":1609872448109,"results":"26","hashOfConfig":"19"},{"size":5496,"mtime":1609872567047,"results":"27","hashOfConfig":"19"},{"size":490,"mtime":1609879839126,"results":"28","hashOfConfig":"19"},{"size":194,"mtime":1609541170457,"results":"29","hashOfConfig":"19"},{"size":409,"mtime":1609879497888,"results":"30","hashOfConfig":"19"},{"size":316,"mtime":1609867772166,"results":"31","hashOfConfig":"19"},{"size":605,"mtime":1609636600919,"results":"32","hashOfConfig":"19"},{"size":276,"mtime":1609633755796,"results":"33","hashOfConfig":"19"},{"size":310,"mtime":1609867772166,"results":"34","hashOfConfig":"19"},{"size":1327,"mtime":1609879609802,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1vbgv3u",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"38"},"/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/index.js",[],["79","80"],"/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/App.js",["81","82"],"import './App.css';\nimport Login from './components/Auth/Login/Login';\nimport Register from './components/Auth/Register/Register';\nimport { Route, Switch } from 'react-router-dom';\nimport Profile from './components/Profile/Profile';\nimport Lists from './components/Lists/Lists';\nimport Layout from './components/Layout/Layout';\nimport Background from './components/Background/Background';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Background />      \n      <Switch>\n        <Route exact path='/'>\n        <Layout />\n        </Route>\n\n        <Route exact path='/profile'>\n          <Profile />\n        </Route>\n\n        <Route exact path='/my-lists'>\n          <Lists />\n        </Route>\n      </Switch>             \n    </div>\n  );\n}\n\nexport default App;\n","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/reportWebVitals.js",[],"/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/UI/Button/Button.js",[],["83","84"],"/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Profile/Profile.js",[],"/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Lists/Lists.js",[],"/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/axios/config.js",[],["85","86"],"/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Auth/Login/Login.js",["87","88","89","90","91"],"import React, { useState, useEffect } from 'react';\nimport Card from '../../UI/Card/Card';\nimport '../Auth.css';\nimport axios from 'axios';\nimport logo from \"../../../assets/images/DoSTUFF.png\";\n\n\n\nconst Login = props => {\n    const [ userEmail, setUserEmail ] = useState('');\n    const [ userPassword, setUserPassword ] = useState('');\n    const [ submitAction, setSubmitAction ] = useState(false);\n\n    const setUserEmailHandler = event => {\n        // build json object for logging in\n        const loginObject = {};\n        setUserEmail(event)\n    }\n\n    const setUserPasswordHandler = event => {\n        setUserPassword(event)\n    }\n\n    const onSubmitHandler = async (event) => {\n        event.preventDefault();\n\n        const userLogin = {\n            email: userEmail,\n            password: userPassword\n        };\n\n        const body = JSON.stringify(userLogin);\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            };\n\n            const res = await axios.post('api/auth/', body, config)\n            console.log(res.data)\n        } catch (error) {\n            console.log(error.response.data.errors)\n        }\n      \n    };\n    return  (\n        <>\n            <main className=\"login-container\">\n                <section className='form_login-container'>\n                    <Card>\n                        <form className=\"form_login-form\" onSubmit={ event => onSubmitHandler(event) }> \n                        <div className=\"form_login-title-container\">\n                            <img src={ logo }/>\n                        </div>\n                        <span className=\"form_login__title\">PLEASE LOGIN</span>\n\n                        \n\n                            <div className='form_login-Input'>\n                                <div class=\"form_login--label-container\">\n                                    <label class=\"form_login--labeling line--up\">Username</label>\n                                </div>\n                                <input \n                                    onChange={ event => setUserEmailHandler(event.target.value) }\n                                    className=\"form_login--input line--up\"\n                                    placeholder='Email' \n                                    value={ userEmail }\n                                    type='email' />\n                            </div>\n                            <div  className='form_login-Input'>\n                                <div class=\"form_login--label-container\">\n                                    <label className=\"form_login--labeling line--up\">Password</label>\n                                </div>\n                                \n                                <input \n                                    className=\"form_login--input line--up\"\n                                    onChange={ event => setUserPasswordHandler(event.target.value) }\n                                    placeholder='Password' \n                                    value={ userPassword }\n                                    type='password' />\n                            </div>\n                            <div className=\"form_login--submit\">\n                                <button\n                                    className=\"form_login--submit-btn\"\n                                    type='submit'>LOGIN</button>\n                            </div>\n                            <div \n                                onClick={ props.toggleForm }\n                                className=\"form_login--register__login\">\n                                Don't Have an account?\n                            </div> \n                        </form>\n                    </Card>\n                </section>                \n            </main>\n        </>\n    )\n};\n\nexport default Login;","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Auth/Register/Register.js",["92","93","94","95"],"import React, { useState, useEffect } from 'react';\nimport Card from '../../UI/Card/Card';\nimport '../Auth.css';\nimport axios from 'axios';\nimport logo from \"../../../assets/images/DoSTUFF.png\";\n\n\n\nconst Register = props => {\n    const [ userFirstName, setFirstName ] = useState('');\n    const [ userLastName, setLastName ] = useState('');\n    const [ userEmail, setUserEmail ] = useState('');\n    const [ userPassword, setUserPassword ] = useState('');\n    const [ submitAction, setSubmitAction ] = useState(false);\n\n\n    const setFirstNameHandler = event => {\n        setFirstName(event)\n    };\n\n    const setLastNameHandler = event => {\n        setLastName(event)\n    };\n\n    const setUserEmailHandler = event => {\n        setUserEmail(event)\n    };\n\n    const setUserPasswordHandler = event => {\n        setUserPassword(event)\n    };\n\n    const onSubmitHandler = async (event) => {\n        event.preventDefault();\n\n        const userLogin = {\n            name: `${userFirstName} ${userLastName}`,\n            email: userEmail,\n            password: userPassword\n        };\n\n        const body = JSON.stringify(userLogin);\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            };\n\n            const res = await axios.post('api/users', body, config)\n            console.log(res.data)\n        } catch (error) {\n            console.log(error.response.data.errors)\n        }\n      \n    };\n    return  (\n        <>\n            <main className=\"login-container\">\n                <section className='form_login-container'>\n                    <Card>\n                        <form className=\"form_login-form\" onSubmit={ event => onSubmitHandler(event) }> \n                        <div className=\"form_login-title-container\">\n                            <img src={ logo }/>\n                        </div>\n                        <span className=\"form_login-form_title\">SIGN UP</span>\n                            <div  className='form_login-Input'>\n                                <div class=\"form_login--label-container\">\n                                    <label className=\"form_login--labeling line--up\">First</label>\n                                </div>\n                                <input \n                                    className=\"form_login--input line--up\"\n                                    onChange={ event => setFirstNameHandler(event.target.value) }\n                                    placeholder='Firstname' \n                                    value={ userFirstName }\n                                    type='text' />\n                            </div>\n                            <div  className='form_login-Input'>\n                                <div class=\"form_login--label-container\">\n                                    <label className=\"form_login--labeling line--up\">Last</label>\n                                </div>\n                                <input \n                                    className=\"form_login--input line--up\"\n                                    onChange={ event => setLastNameHandler(event.target.value) }\n                                    placeholder='Lastname' \n                                    value={ userLastName }\n                                    type='text' />\n                            </div>\n                            <div className='form_login-Input'>\n                                <div class=\"form_login--label-container\">\n                                    <label class=\"form_login--labeling line--up\">Username</label>\n                                </div>\n                                <input \n                                    onChange={ event => setUserEmailHandler(event.target.value) }\n                                    className=\"form_login--input line--up\"\n                                    placeholder='Email' \n                                    value={ userEmail }\n                                    type='email' />\n                            </div>\n                            <div  className='form_login-Input'>\n                                <div class=\"form_login--label-container\">\n                                    <label className=\"form_login--labeling line--up\">Password</label>\n                                </div>\n                                <input \n                                    className=\"form_login--input line--up\"\n                                    onChange={ event => setUserPasswordHandler(event.target.value) }\n                                    placeholder='Password' \n                                    value={ userPassword }\n                                    type='password' />\n                            </div>\n                            \n                            <div className=\"form_login--submit\">\n                                <button\n                                    className=\"form_login--submit-btn\"\n                                    type='submit'>SIGN UP</button>\n                            </div>\n                            <div \n                                onClick={ props.toggleForm }\n                                className=\"form_login--register__login\">\n                                Already Have an account?\n                            </div> \n                        </form>\n                    </Card>\n                </section>                \n            </main>\n        </>\n    )\n};\n\nexport default Register;","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Header/Header.js",["96","97","98"],"/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/UI/Card/Card.js",[],"/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/UI/Logo/Logo.js",["99","100","101"],"import React from 'react'\nimport './Logo.css';\nimport { NavLink } from 'react-router-dom';\nimport  logo from \"../../../assets/images/DoSTUFF.png\";\n\n\nconst Logo = props => {\n    const isLoggedIn = props.isLoggedIn;\n    return (\n        <a className={ isLoggedIn ? \"logo-container__logged-in\" : \"logo-container__logged-out\" }>\n            <img src={ logo }/>\n        </a>\n        \n    )\n};\n\nexport default Logo;","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Layout/Layout.js",[],"/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Auth/Auth.js",["102"],"import React, { useState, useRef } from 'react';\nimport Login from './Login/Login';\nimport Register from './Register/Register';\nimport './Auth.css';\n\nconst Auth = () => {\n\n    const [ toggleState, setToggleState ] = useState(false);\n    console.log('STATE')\n    const formToggleHandler = () => {\n        console.log(toggleState)\n        setToggleState(!toggleState)\n    };\n     \n\n    return (\n            toggleState \n            ?\n            <Register toggleForm={ formToggleHandler } />\n            :\n            <Login toggleForm={ formToggleHandler } />\n\n              \n   )\n}\n\nexport default Auth;\n\n","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Background/Background.js",[],"/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Footer/Footer.js",[],"/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/UI/Nav/AuthNav.js",["103","104"],"import React from 'react';\nimport './AuthNav.css';\nimport { NavLink } from 'react-router-dom';\nimport Logo from '../../UI/Logo/Logo';\n\nconst AuthNav = props => {\n    // Right code for having two separate headers.\n    const isLoggedIn = props.isLoggedIn;\n\n    return (\n        <>   \n            { \n                props.isLoggedIn &&        \n\n                <nav className=\"head-main-menu header-area\">\n                    <ul className=\"head-main-menu_items\">\n                        <li className=\"head-main-menu_label\">\n                            <NavLink\n                                className=\"nav-link\"\n                                to=\"/\">Home</ NavLink>\n                        </li>\n\n                        <li className=\"head-main-menu_label\">\n                            <NavLink \n                                className=\"nav-link\"\n                                to=\"/profile\">Profile</ NavLink>\n                        </li>\n\n                        <li className=\"head-main-menu_label\">\n                            <NavLink \n                                className=\"nav-link user-lists my-lists\"\n                                to=\"/my-lists\">My Lists</ NavLink>\n                        </li>\n                    </ul>\n                </nav>\n            }\n        </>\n\n    )\n};\n\nexport default AuthNav;",{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":2,"column":8,"nodeType":"111","messageId":"112","endLine":2,"endColumn":13},{"ruleId":"109","severity":1,"message":"113","line":3,"column":8,"nodeType":"111","messageId":"112","endLine":3,"endColumn":16},{"ruleId":"105","replacedBy":"114"},{"ruleId":"107","replacedBy":"115"},{"ruleId":"105","replacedBy":"116"},{"ruleId":"107","replacedBy":"117"},{"ruleId":"109","severity":1,"message":"118","line":1,"column":27,"nodeType":"111","messageId":"112","endLine":1,"endColumn":36},{"ruleId":"109","severity":1,"message":"119","line":12,"column":13,"nodeType":"111","messageId":"112","endLine":12,"endColumn":25},{"ruleId":"109","severity":1,"message":"120","line":12,"column":27,"nodeType":"111","messageId":"112","endLine":12,"endColumn":42},{"ruleId":"109","severity":1,"message":"121","line":16,"column":15,"nodeType":"111","messageId":"112","endLine":16,"endColumn":26},{"ruleId":"122","severity":1,"message":"123","line":55,"column":29,"nodeType":"124","endLine":55,"endColumn":48},{"ruleId":"109","severity":1,"message":"118","line":1,"column":27,"nodeType":"111","messageId":"112","endLine":1,"endColumn":36},{"ruleId":"109","severity":1,"message":"119","line":14,"column":13,"nodeType":"111","messageId":"112","endLine":14,"endColumn":25},{"ruleId":"109","severity":1,"message":"120","line":14,"column":27,"nodeType":"111","messageId":"112","endLine":14,"endColumn":42},{"ruleId":"122","severity":1,"message":"123","line":65,"column":29,"nodeType":"124","endLine":65,"endColumn":48},{"ruleId":"109","severity":1,"message":"125","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"126","line":3,"column":8,"nodeType":"111","messageId":"112","endLine":3,"endColumn":12},{"ruleId":"109","severity":1,"message":"127","line":4,"column":8,"nodeType":"111","messageId":"112","endLine":4,"endColumn":15},{"ruleId":"109","severity":1,"message":"128","line":3,"column":10,"nodeType":"111","messageId":"112","endLine":3,"endColumn":17},{"ruleId":"129","severity":1,"message":"130","line":10,"column":9,"nodeType":"124","endLine":10,"endColumn":98},{"ruleId":"122","severity":1,"message":"123","line":11,"column":13,"nodeType":"124","endLine":11,"endColumn":32},{"ruleId":"109","severity":1,"message":"131","line":1,"column":27,"nodeType":"111","messageId":"112","endLine":1,"endColumn":33},{"ruleId":"109","severity":1,"message":"132","line":4,"column":8,"nodeType":"111","messageId":"112","endLine":4,"endColumn":12},{"ruleId":"109","severity":1,"message":"133","line":8,"column":11,"nodeType":"111","messageId":"112","endLine":8,"endColumn":21},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'Register' is defined but never used.",["134"],["135"],["134"],["135"],"'useEffect' is defined but never used.","'submitAction' is assigned a value but never used.","'setSubmitAction' is assigned a value but never used.","'loginObject' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'Card' is defined but never used.","'classes' is defined but never used.","'NavLink' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useRef' is defined but never used.","'Logo' is defined but never used.","'isLoggedIn' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
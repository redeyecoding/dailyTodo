[{"/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/index.js":"1","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/App.js":"2","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/reportWebVitals.js":"3","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/store/Reducers/alertReducer.js":"4","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Profile/Profile.js":"5","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Layout/Layout.js":"6","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Lists/Lists.js":"7","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Background/AuthBackground.js":"8","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/store/actions/actionTypes.js":"9","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Header/Header.js":"10","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Auth/Auth.js":"11","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/UI/Card/Card.js":"12","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/UI/Nav/AuthNav.js":"13","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/UI/Logo/Logo.js":"14","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Auth/Login/Login.js":"15","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Auth/Register/Register.js":"16","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/store/actions/alert.js":"17","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Modal/Modal.js":"18"},{"size":1039,"mtime":1610207505672,"results":"19","hashOfConfig":"20"},{"size":685,"mtime":1610213487159,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1608567184069,"results":"22","hashOfConfig":"20"},{"size":472,"mtime":1610301360394,"results":"23","hashOfConfig":"20"},{"size":332,"mtime":1609867772166,"results":"24","hashOfConfig":"20"},{"size":413,"mtime":1610303619255,"results":"25","hashOfConfig":"20"},{"size":330,"mtime":1609541118678,"results":"26","hashOfConfig":"20"},{"size":886,"mtime":1610310197151,"results":"27","hashOfConfig":"20"},{"size":82,"mtime":1610205736380,"results":"28","hashOfConfig":"20"},{"size":640,"mtime":1610213170956,"results":"29","hashOfConfig":"20"},{"size":503,"mtime":1610301261788,"results":"30","hashOfConfig":"20"},{"size":385,"mtime":1610307692904,"results":"31","hashOfConfig":"20"},{"size":1327,"mtime":1609879609802,"results":"32","hashOfConfig":"20"},{"size":409,"mtime":1609879497888,"results":"33","hashOfConfig":"20"},{"size":3889,"mtime":1610297641509,"results":"34","hashOfConfig":"20"},{"size":6040,"mtime":1610303693350,"results":"35","hashOfConfig":"20"},{"size":210,"mtime":1610205736380,"results":"36","hashOfConfig":"20"},{"size":414,"mtime":1610307660904,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"1vbgv3u",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"41"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"41"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"41"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"41"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"41"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/index.js",["82"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { createStore, compose, combineReducers, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport alertReducer from './store/Reducers/alertReducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__() || compose;\n\nlet store = createStore(\n  alertReducer, \n  compose(composeEnhancers, applyMiddleware(thunk))\n  );\n\n\n\nReactDOM.render(\n  <Provider store={ store }>\n    <Router>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["83","84"],"/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/App.js",[],"/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/reportWebVitals.js",[],"/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/store/Reducers/alertReducer.js",[],"/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Profile/Profile.js",[],"/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Layout/Layout.js",[],"/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Lists/Lists.js",[],"/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Background/AuthBackground.js",[],"/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/store/actions/actionTypes.js",[],"/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Header/Header.js",["85"],"import React, { useState } from 'react';\nimport AuthNav from '../UI/Nav/AuthNav';\nimport Logo from '../UI/Logo/Logo';\nimport  { connect } from 'react-redux';\nimport './Header.css';\n\nconst Header = props => {\n    const isLoggedIn = true;\n    return (\n        <header className={ props.isError ? 'active-modal' : 'main-header' }>\n            <Logo\n                isLoggedIn={ isLoggedIn } />\n            <AuthNav\n                isLoggedIn={ isLoggedIn }\n              />\n        </header>\n    )\n};\n\nconst mapStateToProps = state => {\n    return {\n        isError: state.errorActive\n    }\n};\n\nexport default connect(mapStateToProps)(Header);","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Auth/Auth.js",["86"],"import React, { useState, useRef } from 'react';\nimport Login from './Login/Login';\nimport Register from './Register/Register';\n\nconst Auth = () => {\n    const [ toggleState, setToggleState ] = useState(false);\n    const formToggleHandler = () => {\n        setToggleState(!toggleState)\n    };\n    return (\n            toggleState \n            ?\n            <Register toggleForm={ formToggleHandler } />\n            :\n            <Login toggleForm={ formToggleHandler } />\n   )\n};\n\nexport default Auth;\n\n","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/UI/Card/Card.js",[],"/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/UI/Nav/AuthNav.js",["87","88"],"import React from 'react';\nimport './AuthNav.css';\nimport { NavLink } from 'react-router-dom';\nimport Logo from '../../UI/Logo/Logo';\n\nconst AuthNav = props => {\n    // Right code for having two separate headers.\n    const isLoggedIn = props.isLoggedIn;\n\n    return (\n        <>   \n            { \n                props.isLoggedIn &&        \n\n                <nav className=\"head-main-menu header-area\">\n                    <ul className=\"head-main-menu_items\">\n                        <li className=\"head-main-menu_label\">\n                            <NavLink\n                                className=\"nav-link\"\n                                to=\"/\">Home</ NavLink>\n                        </li>\n\n                        <li className=\"head-main-menu_label\">\n                            <NavLink \n                                className=\"nav-link\"\n                                to=\"/profile\">Profile</ NavLink>\n                        </li>\n\n                        <li className=\"head-main-menu_label\">\n                            <NavLink \n                                className=\"nav-link user-lists my-lists\"\n                                to=\"/my-lists\">My Lists</ NavLink>\n                        </li>\n                    </ul>\n                </nav>\n            }\n        </>\n\n    )\n};\n\nexport default AuthNav;","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/UI/Logo/Logo.js",["89","90","91"],"import React from 'react'\nimport './Logo.css';\nimport { NavLink } from 'react-router-dom';\nimport  logo from \"../../../assets/images/DoSTUFF.png\";\n\n\nconst Logo = props => {\n    const isLoggedIn = props.isLoggedIn;\n    return (\n        <a className={ isLoggedIn ? \"logo-container__logged-in\" : \"logo-container__logged-out\" }>\n            <img src={ logo }/>\n        </a>\n        \n    )\n};\n\nexport default Logo;","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Auth/Login/Login.js",["92","93","94","95","96"],"import React, { useState, useEffect } from 'react';\nimport Card from '../../UI/Card/Card';\nimport classes from './Login.module.css';\nimport axios from 'axios';\nimport logo from \"../../../assets/images/DoSTUFF.png\";\n\n\n\nconst Login = props => {\n    const [ userEmail, setUserEmail ] = useState('');\n    const [ userPassword, setUserPassword ] = useState('');\n    const [ submitAction, setSubmitAction ] = useState(false);\n\n    const setUserEmailHandler = event => {\n        // build json object for logging in\n        const loginObject = {};\n        setUserEmail(event)\n    }\n\n    const setUserPasswordHandler = event => {\n        setUserPassword(event)\n    }\n\n    const onSubmitHandler = async (event) => {\n        event.preventDefault();\n\n        const userLogin = {\n            email: userEmail,\n            password: userPassword\n        };\n\n        const body = JSON.stringify(userLogin);\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            };\n\n            const res = await axios.post('api/auth/', body, config)\n            console.log(res.data)\n        } catch (error) {\n            console.log(error.response.data.errors)\n        }\n      \n    };\n    return  (\n        <>\n            <main className={ classes.main_login_container }>\n                <section className={ classes.login_form_container }>\n                    <Card>\n                        <form onSubmit={ event => onSubmitHandler(event) }> \n                        <div className={ classes.login_form_title_container }>\n                            <img src={ logo }/>\n                        </div>\n                        <span className={ classes.login_form__title }>PLEASE LOGIN</span>\n\n                            <div>\n                                <div class={ classes.login_form__label_container }>\n                                    <label class={ classes.login_form__labeling }>Username</label>\n                                </div>\n                                <input \n                                    onChange={ event => setUserEmailHandler(event.target.value) }\n                                    className={ classes.login_form__input }\n                                    placeholder='Email' \n                                    value={ userEmail }\n                                    type='email' />\n                            </div>\n\n                            <div>\n                                <div class={ classes.login_form__label_container }>\n                                    <label className={ classes.login_form__labeling }>Password</label>\n                                </div>\n                                \n                                <input \n                                    className={ classes.login_form__input }\n                                    onChange={ event => setUserPasswordHandler(event.target.value) }\n                                    placeholder='Password' \n                                    value={ userPassword }\n                                    type='password' />\n                            </div>\n\n                            <div className={ classes.login_form__submit_container }>\n                                <button\n                                    className={ classes.login_form__submit_btn }\n                                    type='submit'>LOGIN</button>\n                            </div>\n                            <div \n                                onClick={ props.toggleForm }\n                                className={ classes.login_form__toggler }>\n                                Don't Have an account?\n                            </div> \n                        </form>\n                    </Card>\n                </section>                \n            </main>\n        </>\n    )\n};\n\nexport default Login;","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Auth/Register/Register.js",["97","98","99","100","101"],"import React, { useState, useEffect } from 'react';\nimport Card from '../../UI/Card/Card';\nimport classes from './Register.module.css';\nimport axios from 'axios';\nimport logo from \"../../../assets/images/DoSTUFF.png\";\nimport { connect } from 'react-redux';\n\nimport {\n    setAlert\n } from '../../../store/actions/alert';\n\n\n\nconst Register = props => {\n    const [ userFirstName, setFirstName ] = useState('');\n    const [ userLastName, setLastName ] = useState('');\n    const [ userEmail, setUserEmail ] = useState('');\n    const [ userPassword, setUserPassword ] = useState('');\n    const [ submitAction, setSubmitAction ] = useState(false);\n\n\n    const setFirstNameHandler = event => {\n        setFirstName(event)\n    };\n\n    const setLastNameHandler = event => {\n        setLastName(event)\n    };\n\n    const setUserEmailHandler = event => {\n        setUserEmail(event)\n    };\n\n    const setUserPasswordHandler = event => {\n        setUserPassword(event)\n    };\n\n    const onSubmitHandler = async (event) => {\n        event.preventDefault();        \n\n        const userLogin = {\n            name: `${userFirstName} ${userLastName}`,\n            email: userEmail,\n            password: userPassword\n        };\n\n        const body = JSON.stringify(userLogin);\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            };\n\n            const res = await axios.post('api/users', body, config);\n\n        } catch (error) {\n            const { msg } = error.response.data.errors[0];\n            props.testError(msg);\n        }\n      \n    };\n    return  (\n        <>           \n            <main className={ classes.registration_container }>\n            <section className={ classes.registration_form_container }>\n                    <Card>\n                        <form onSubmit={ event => onSubmitHandler(event) }> \n                        <div className={ classes.registration_form_title_container }>\n                            <img src={ logo }/>\n                        </div>\n                        <span className={ classes.registration_form__title }>PLEASE LOGIN</span>\n\n                            <div>\n                                <div class={ classes.registration_form__label_container }>\n                                    <label class={ classes.registration_form__labeling }>Firstname</label>\n                                </div>\n                                <input \n                                    onChange={ event => setFirstNameHandler(event.target.value) }\n                                    className={ classes.registration_form__input }\n                                    placeholder='Firstname' \n                                    value={ userFirstName }\n                                    type='text' />\n                            </div>\n\n\n                            <div>\n                                <div class={ classes.registration_form__label_container }>\n                                    <label class={ classes.registration_form__labeling }>Lastname</label>\n                                </div>\n                                <input \n                                    onChange={ event => setLastNameHandler(event.target.value) }\n                                    className={ classes.registration_form__input }\n                                    placeholder='Lastname' \n                                    value={ userLastName }\n                                    type='text' />\n                            </div>\n\n                            <div>\n                                <div class={ classes.registration_form__label_container }>\n                                    <label class={ classes.registration_form__labeling }>Email</label>\n                                </div>\n                                <input \n                                    onChange={ event => setUserEmailHandler(event.target.value) }\n                                    className={ classes.registration_form__input }\n                                    placeholder='Email' \n                                    value={ userEmail }\n                                    type='email' />\n                            </div>\n\n                            <div>\n                                <div class={ classes.registration_form__label_container }>\n                                    <label className={ classes.registration_form__labeling }>Password</label>\n                                </div>\n                                \n                                <input \n                                    className={ classes.registration_form__input }\n                                    onChange={ event => setUserPasswordHandler(event.target.value) }\n                                    placeholder='Password' \n                                    value={ userPassword }\n                                    type='password' />\n                            </div>\n\n                            <div className={ classes.registration_form__submit_container }>\n                                <button\n                                    className={ classes.registration_form__submit_btn }\n                                    type='submit'>LOGIN</button>\n                            </div>\n                            <div \n                                onClick={ props.toggleForm }\n                                className={ classes.registration_form__toggler }>\n                                Don't Have an account?\n                            </div> \n                        </form>\n                    </Card>\n                </section>                \n            </main>\n        </>\n    )\n};\n\nconst mapStateToProps = state => {\n    return {\n        err: state.error,\n        isError: state.errorActive\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        testError: alert => dispatch( setAlert(alert) )\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/store/actions/alert.js",[],"/home/jeffjam/react_apps/dailyTodo/dailyTodo/client/src/components/Modal/Modal.js",["102"],{"ruleId":"103","severity":1,"message":"104","line":7,"column":32,"nodeType":"105","messageId":"106","endLine":7,"endColumn":47},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"103","severity":1,"message":"111","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":25},{"ruleId":"103","severity":1,"message":"112","line":1,"column":27,"nodeType":"105","messageId":"106","endLine":1,"endColumn":33},{"ruleId":"103","severity":1,"message":"113","line":4,"column":8,"nodeType":"105","messageId":"106","endLine":4,"endColumn":12},{"ruleId":"103","severity":1,"message":"114","line":8,"column":11,"nodeType":"105","messageId":"106","endLine":8,"endColumn":21},{"ruleId":"103","severity":1,"message":"115","line":3,"column":10,"nodeType":"105","messageId":"106","endLine":3,"endColumn":17},{"ruleId":"116","severity":1,"message":"117","line":10,"column":9,"nodeType":"118","endLine":10,"endColumn":98},{"ruleId":"119","severity":1,"message":"120","line":11,"column":13,"nodeType":"118","endLine":11,"endColumn":32},{"ruleId":"103","severity":1,"message":"121","line":1,"column":27,"nodeType":"105","messageId":"106","endLine":1,"endColumn":36},{"ruleId":"103","severity":1,"message":"122","line":12,"column":13,"nodeType":"105","messageId":"106","endLine":12,"endColumn":25},{"ruleId":"103","severity":1,"message":"123","line":12,"column":27,"nodeType":"105","messageId":"106","endLine":12,"endColumn":42},{"ruleId":"103","severity":1,"message":"124","line":16,"column":15,"nodeType":"105","messageId":"106","endLine":16,"endColumn":26},{"ruleId":"119","severity":1,"message":"120","line":55,"column":29,"nodeType":"118","endLine":55,"endColumn":48},{"ruleId":"103","severity":1,"message":"121","line":1,"column":27,"nodeType":"105","messageId":"106","endLine":1,"endColumn":36},{"ruleId":"103","severity":1,"message":"122","line":19,"column":13,"nodeType":"105","messageId":"106","endLine":19,"endColumn":25},{"ruleId":"103","severity":1,"message":"123","line":19,"column":27,"nodeType":"105","messageId":"106","endLine":19,"endColumn":42},{"ruleId":"103","severity":1,"message":"125","line":56,"column":19,"nodeType":"105","messageId":"106","endLine":56,"endColumn":22},{"ruleId":"119","severity":1,"message":"120","line":71,"column":29,"nodeType":"118","endLine":71,"endColumn":48},{"ruleId":"103","severity":1,"message":"126","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":12},"no-unused-vars","'combineReducers' is defined but never used.","Identifier","unusedVar","no-native-reassign",["127"],"no-negated-in-lhs",["128"],"'useState' is defined but never used.","'useRef' is defined but never used.","'Logo' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'NavLink' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useEffect' is defined but never used.","'submitAction' is assigned a value but never used.","'setSubmitAction' is assigned a value but never used.","'loginObject' is assigned a value but never used.","'res' is assigned a value but never used.","'Card' is defined but never used.","no-global-assign","no-unsafe-negation"]